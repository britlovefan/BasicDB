--- javadoc/simpledb/BTreeUtility.html	2016-11-10 13:43:05.000000000 -0600
+++ javadoc/simpledb/BTreeUtility.html	1969-12-31 18:00:00.000000000 -0600
@@ -1,1077 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!-- NewPage -->
-<html lang="en">
-<head>
-<!-- Generated by javadoc (1.8.0_25) on Thu Nov 10 13:43:05 CST 2016 -->
-<title>BTreeUtility</title>
-<meta name="date" content="2016-11-10">
-<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
-<script type="text/javascript" src="../script.js"></script>
-</head>
-<body>
-<script type="text/javascript"><!--
-    try {
-        if (location.href.indexOf('is-external=true') == -1) {
-            parent.document.title="BTreeUtility";
-        }
-    }
-    catch(err) {
-    }
-//-->
-var methods = {"i0":9,"i1":9,"i2":9,"i3":9,"i4":9,"i5":9,"i6":9,"i7":9,"i8":9,"i9":9,"i10":9,"i11":9,"i12":9,"i13":9,"i14":9,"i15":9,"i16":9,"i17":9,"i18":9,"i19":9,"i20":9,"i21":9,"i22":9,"i23":9,"i24":9,"i25":9};
-var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
-var altColor = "altColor";
-var rowColor = "rowColor";
-var tableTab = "tableTab";
-var activeTableTab = "activeTableTab";
-</script>
-<noscript>
-<div>JavaScript is disabled on your browser.</div>
-</noscript>
-<!-- ========= START OF TOP NAVBAR ======= -->
-<div class="topNav"><a name="navbar.top">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.top.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_top">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_top");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.top">
-<!--   -->
-</a></div>
-<!-- ========= END OF TOP NAVBAR ========= -->
-<!-- ======== START OF CLASS DATA ======== -->
-<div class="header">
-<div class="subTitle">simpledb</div>
-<h2 title="Class BTreeUtility" class="title">Class BTreeUtility</h2>
-</div>
-<div class="contentContainer">
-<ul class="inheritance">
-<li>java.lang.Object</li>
-<li>
-<ul class="inheritance">
-<li>simpledb.BTreeUtility</li>
-</ul>
-</li>
-</ul>
-<div class="description">
-<ul class="blockList">
-<li class="blockList">
-<hr>
-<br>
-<pre>public class <span class="typeNameLabel">BTreeUtility</span>
-extends java.lang.Object</pre>
-<div class="block">Helper methods used for testing and implementing random features.</div>
-</li>
-</ul>
-</div>
-<div class="summary">
-<ul class="blockList">
-<li class="blockList">
-<!-- ======== NESTED CLASS SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="nested.class.summary">
-<!--   -->
-</a>
-<h3>Nested Class Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
-<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Class and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb">BTreeUtility.BTreeDeleter</a></span></code>
-<div class="block">Helper class that attempts to delete tuple(s) in a new thread</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeInserter.html" title="class in simpledb">BTreeUtility.BTreeInserter</a></span></code>
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</td>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>(package private) static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeReader.html" title="class in simpledb">BTreeUtility.BTreeReader</a></span></code>
-<div class="block">Helper class that searches for tuple(s) in a new thread</div>
-</td>
-</tr>
-<tr class="rowColor">
-<td class="colFirst"><code>(package private) static class&nbsp;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.BTreeWriter.html" title="class in simpledb">BTreeUtility.BTreeWriter</a></span></code>
-<div class="block">Helper class that attempts to insert a tuple in a new thread</div>
-</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- =========== FIELD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.summary">
-<!--   -->
-</a>
-<h3>Field Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
-<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Field and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#MAX_RAND_VALUE">MAX_RAND_VALUE</a></span></code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.summary">
-<!--   -->
-</a>
-<h3>Constructor Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
-<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
-<tr>
-<th class="colOne" scope="col">Constructor and Description</th>
-</tr>
-<tr class="altColor">
-<td class="colOne"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#BTreeUtility--">BTreeUtility</a></span>()</code>&nbsp;</td>
-</tr>
-</table>
-</li>
-</ul>
-<!-- ========== METHOD SUMMARY =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.summary">
-<!--   -->
-</a>
-<h3>Method Summary</h3>
-<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
-<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
-<tr>
-<th class="colFirst" scope="col">Modifier and Type</th>
-<th class="colLast" scope="col">Method and Description</th>
-</tr>
-<tr id="i0" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">createBTreeFile</a></span>(int&nbsp;columns,
-               int&nbsp;rows,
-               java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-               java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-               int&nbsp;keyField)</code>
-<div class="block">creates a *non* random B+ tree file for testing</div>
-</td>
-</tr>
-<tr id="i1" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createEmptyBTreeFile-java.lang.String-int-int-">createEmptyBTreeFile</a></span>(java.lang.String&nbsp;path,
-                    int&nbsp;cols,
-                    int&nbsp;keyField)</code>
-<div class="block">A utility method to create a new BTreeFile with no data,
- assuming the path does not already exist.</div>
-</td>
-</tr>
-<tr id="i2" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createEmptyBTreeFile-java.lang.String-int-int-int-">createEmptyBTreeFile</a></span>(java.lang.String&nbsp;path,
-                    int&nbsp;cols,
-                    int&nbsp;keyField,
-                    int&nbsp;pages)</code>
-<div class="block">A utility method to create a new BTreeFile with no data, with the specified
- number of pages, assuming the path does not already exist.</div>
-</td>
-</tr>
-<tr id="i3" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomBTreeFile-int-int-int-java.util.Map-java.util.ArrayList-int-">createRandomBTreeFile</a></span>(int&nbsp;columns,
-                     int&nbsp;rows,
-                     int&nbsp;maxValue,
-                     java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                     java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                     int&nbsp;keyField)</code>
-<div class="block">Generates a random B+ tree file for testing</div>
-</td>
-</tr>
-<tr id="i4" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">createRandomBTreeFile</a></span>(int&nbsp;columns,
-                     int&nbsp;rows,
-                     java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                     java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                     int&nbsp;keyField)</code>&nbsp;</td>
-</tr>
-<tr id="i5" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-">createRandomInternalPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                        int&nbsp;keyField,
-                        int&nbsp;childPageCategory,
-                        int&nbsp;minKey,
-                        int&nbsp;maxKey,
-                        int&nbsp;minChildPtr)</code>
-<div class="block">Create a random internal page for testing</div>
-</td>
-</tr>
-<tr id="i6" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-int-">createRandomInternalPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                        int&nbsp;keyField,
-                        int&nbsp;childPageCategory,
-                        int&nbsp;numKeys,
-                        int&nbsp;minKey,
-                        int&nbsp;maxKey,
-                        int&nbsp;minChildPtr)</code>
-<div class="block">Create a random internal page for testing</div>
-</td>
-</tr>
-<tr id="i7" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-">createRandomLeafPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                    int&nbsp;columns,
-                    int&nbsp;keyField,
-                    int&nbsp;min,
-                    int&nbsp;max)</code>
-<div class="block">Create a random leaf page for testing</div>
-</td>
-</tr>
-<tr id="i8" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-int-">createRandomLeafPage</a></span>(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                    int&nbsp;columns,
-                    int&nbsp;keyField,
-                    int&nbsp;numTuples,
-                    int&nbsp;min,
-                    int&nbsp;max)</code>
-<div class="block">Create a random leaf page for testing</div>
-</td>
-</tr>
-<tr id="i9" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomEntries-int-int-int-int-java.util.ArrayList-java.util.ArrayList-">generateRandomEntries</a></span>(int&nbsp;numKeys,
-                     int&nbsp;minKey,
-                     int&nbsp;maxKey,
-                     int&nbsp;minChildPtr,
-                     java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;childPointers,
-                     java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;keys)</code>
-<div class="block">Generate a random set of entries for testing</div>
-</td>
-</tr>
-<tr id="i10" class="altColor">
-<td class="colFirst"><code>static java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomEntries-int-int-int-int-int-int-">generateRandomEntries</a></span>(int&nbsp;numKeys,
-                     int&nbsp;tableid,
-                     int&nbsp;childPageCategory,
-                     int&nbsp;minKey,
-                     int&nbsp;maxKey,
-                     int&nbsp;minChildPtr)</code>
-<div class="block">Generate a random set of entries for testing</div>
-</td>
-</tr>
-<tr id="i11" class="rowColor">
-<td class="colFirst"><code>static java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-int-">generateRandomTuples</a></span>(int&nbsp;columns,
-                    int&nbsp;rows,
-                    int&nbsp;min,
-                    int&nbsp;max)</code>
-<div class="block">Generate a random set of tuples for testing</div>
-</td>
-</tr>
-<tr id="i12" class="altColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-int-java.util.Map-java.util.ArrayList-">generateRandomTuples</a></span>(int&nbsp;columns,
-                    int&nbsp;rows,
-                    int&nbsp;minValue,
-                    int&nbsp;maxValue,
-                    java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                    java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples)</code>
-<div class="block">Generate a random set of tuples for testing</div>
-</td>
-</tr>
-<tr id="i13" class="rowColor">
-<td class="colFirst"><code>static void</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#generateRandomTuples-int-int-int-java.util.Map-java.util.ArrayList-">generateRandomTuples</a></span>(int&nbsp;columns,
-                    int&nbsp;rows,
-                    int&nbsp;maxValue,
-                    java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                    java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples)</code>
-<div class="block">Generate a random set of tuples for testing</div>
-</td>
-</tr>
-<tr id="i14" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeEntry-int-">getBTreeEntry</a></span>(int&nbsp;n)</code>&nbsp;</td>
-</tr>
-<tr id="i15" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeEntry-int-int-">getBTreeEntry</a></span>(int&nbsp;n,
-             int&nbsp;tableid)</code>&nbsp;</td>
-</tr>
-<tr id="i16" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeEntry-int-int-int-">getBTreeEntry</a></span>(int&nbsp;n,
-             int&nbsp;key,
-             int&nbsp;tableid)</code>&nbsp;</td>
-</tr>
-<tr id="i17" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeTuple-java.util.ArrayList-">getBTreeTuple</a></span>(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;tupdata)</code>&nbsp;</td>
-</tr>
-<tr id="i18" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeTuple-int-">getBTreeTuple</a></span>(int&nbsp;n)</code>&nbsp;</td>
-</tr>
-<tr id="i19" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeTuple-int:A-">getBTreeTuple</a></span>(int[]&nbsp;tupdata)</code>&nbsp;</td>
-</tr>
-<tr id="i20" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getBTreeTuple-int-int-">getBTreeTuple</a></span>(int&nbsp;n,
-             int&nbsp;width)</code>&nbsp;</td>
-</tr>
-<tr id="i21" class="rowColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getNumEntriesPerPage--">getNumEntriesPerPage</a></span>()</code>
-<div class="block">The number of entries that can fit on a page with integer key fields</div>
-</td>
-</tr>
-<tr id="i22" class="altColor">
-<td class="colFirst"><code>static int</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#getNumTuplesPerPage-int-">getNumTuplesPerPage</a></span>(int&nbsp;columns)</code>
-<div class="block">Get the number of tuples that can fit on a page with the specified number of integer fields</div>
-</td>
-</tr>
-<tr id="i23" class="rowColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#openBTreeFile-int-java.io.File-int-">openBTreeFile</a></span>(int&nbsp;cols,
-             java.io.File&nbsp;f,
-             int&nbsp;keyField)</code>
-<div class="block">Opens a BTreeFile and adds it to the catalog.</div>
-</td>
-</tr>
-<tr id="i24" class="altColor">
-<td class="colFirst"><code>static <a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a></code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#openBTreeFile-int-java.lang.String-java.io.File-int-">openBTreeFile</a></span>(int&nbsp;cols,
-             java.lang.String&nbsp;colPrefix,
-             java.io.File&nbsp;f,
-             int&nbsp;keyField)</code>&nbsp;</td>
-</tr>
-<tr id="i25" class="rowColor">
-<td class="colFirst"><code>static java.util.ArrayList&lt;java.lang.Integer&gt;</code></td>
-<td class="colLast"><code><span class="memberNameLink"><a href="../simpledb/BTreeUtility.html#tupleToList-simpledb.Tuple-">tupleToList</a></span>(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tuple)</code>&nbsp;</td>
-</tr>
-</table>
-<ul class="blockList">
-<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
-<!--   -->
-</a>
-<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
-<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-<div class="details">
-<ul class="blockList">
-<li class="blockList">
-<!-- ============ FIELD DETAIL =========== -->
-<ul class="blockList">
-<li class="blockList"><a name="field.detail">
-<!--   -->
-</a>
-<h3>Field Detail</h3>
-<a name="MAX_RAND_VALUE">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>MAX_RAND_VALUE</h4>
-<pre>public static final&nbsp;int MAX_RAND_VALUE</pre>
-<dl>
-<dt><span class="seeLabel">See Also:</span></dt>
-<dd><a href="../constant-values.html#simpledb.BTreeUtility.MAX_RAND_VALUE">Constant Field Values</a></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-<ul class="blockList">
-<li class="blockList"><a name="constructor.detail">
-<!--   -->
-</a>
-<h3>Constructor Detail</h3>
-<a name="BTreeUtility--">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>BTreeUtility</h4>
-<pre>public&nbsp;BTreeUtility()</pre>
-</li>
-</ul>
-</li>
-</ul>
-<!-- ============ METHOD DETAIL ========== -->
-<ul class="blockList">
-<li class="blockList"><a name="method.detail">
-<!--   -->
-</a>
-<h3>Method Detail</h3>
-<a name="tupleToList-simpledb.Tuple-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>tupleToList</h4>
-<pre>public static&nbsp;java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;tupleToList(<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;tuple)</pre>
-</li>
-</ul>
-<a name="getBTreeTuple-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getBTreeTuple(int&nbsp;n)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with a single IntField with value n and with
-   RecordId(BTreePageId(1,2, BTreePageId.LEAF), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeTuple-int:A-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getBTreeTuple(int[]&nbsp;tupdata)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with an IntField for every element of tupdata
-   and RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeTuple-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getBTreeTuple(java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;tupdata)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with an IntField for every element of tupdata
-   and RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeTuple-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeTuple</h4>
-<pre>public static&nbsp;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&nbsp;getBTreeTuple(int&nbsp;n,
-                                  int&nbsp;width)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a Tuple with a 'width' IntFields each with value n and
-   with RecordId(BTreePageId(1, 2, BTreePageId.LEAF), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeEntry-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeEntry</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;getBTreeEntry(int&nbsp;n)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeEntry with an IntField with value n and with
-   RecordId(BTreePageId(1,2, BTreePageId.INTERNAL), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeEntry-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeEntry</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;getBTreeEntry(int&nbsp;n,
-                                       int&nbsp;tableid)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeEntry with an IntField with value n and with
-   RecordId(BTreePageId(tableid,2, BTreePageId.INTERNAL), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="getBTreeEntry-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getBTreeEntry</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&nbsp;getBTreeEntry(int&nbsp;n,
-                                       int&nbsp;key,
-                                       int&nbsp;tableid)</pre>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeEntry with an IntField with value key and with
-   RecordId(BTreePageId(tableid,2, BTreePageId.INTERNAL), 3)</dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createRandomBTreeFile(int&nbsp;columns,
-                                              int&nbsp;rows,
-                                              java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                              java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                                              int&nbsp;keyField)
-                                       throws java.io.IOException,
-                                              <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                              <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columnSpecification</code> - Mapping between column index and value.</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomBTreeFile-int-int-int-java.util.Map-java.util.ArrayList-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createRandomBTreeFile(int&nbsp;columns,
-                                              int&nbsp;rows,
-                                              int&nbsp;maxValue,
-                                              java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                              java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                                              int&nbsp;keyField)
-                                       throws java.io.IOException,
-                                              <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                              <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">Generates a random B+ tree file for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>maxValue</code> - - the maximum random value in this B+ tree</dd>
-<dd><code>columnSpecification</code> - - optional column specification</dd>
-<dd><code>tuples</code> - - optional list of tuples to return</dd>
-<dd><code>keyField</code> - - the index of the key field</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeFile</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomTuples-int-int-int-java.util.Map-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomTuples</h4>
-<pre>public static&nbsp;void&nbsp;generateRandomTuples(int&nbsp;columns,
-                                        int&nbsp;rows,
-                                        int&nbsp;maxValue,
-                                        java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                        java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples)</pre>
-<div class="block">Generate a random set of tuples for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>maxValue</code> - - the maximum random value in this B+ tree</dd>
-<dd><code>columnSpecification</code> - - optional column specification</dd>
-<dd><code>tuples</code> - - list of tuples to return</dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomTuples-int-int-int-int-java.util.Map-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomTuples</h4>
-<pre>public static&nbsp;void&nbsp;generateRandomTuples(int&nbsp;columns,
-                                        int&nbsp;rows,
-                                        int&nbsp;minValue,
-                                        int&nbsp;maxValue,
-                                        java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                        java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples)</pre>
-<div class="block">Generate a random set of tuples for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>minValue</code> - - the minimum random value in this B+ tree</dd>
-<dd><code>maxValue</code> - - the maximum random value in this B+ tree</dd>
-<dd><code>columnSpecification</code> - - optional column specification</dd>
-<dd><code>tuples</code> - - list of tuples to return</dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomEntries-int-int-int-int-java.util.ArrayList-java.util.ArrayList-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomEntries</h4>
-<pre>public static&nbsp;void&nbsp;generateRandomEntries(int&nbsp;numKeys,
-                                         int&nbsp;minKey,
-                                         int&nbsp;maxKey,
-                                         int&nbsp;minChildPtr,
-                                         java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;childPointers,
-                                         java.util.ArrayList&lt;java.lang.Integer&gt;&nbsp;keys)</pre>
-<div class="block">Generate a random set of entries for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>numKeys</code> - - number of keys</dd>
-<dd><code>minKey</code> - - the minimum key value</dd>
-<dd><code>maxKey</code> - - the maximum key value</dd>
-<dd><code>minChildPtr</code> - - the first child pointer</dd>
-<dd><code>childPointers</code> - - list of child pointers to return</dd>
-<dd><code>keys</code> - - list of keys to return</dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomTuples-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomTuples</h4>
-<pre>public static&nbsp;java.util.ArrayList&lt;<a href="../simpledb/Tuple.html" title="class in simpledb">Tuple</a>&gt;&nbsp;generateRandomTuples(int&nbsp;columns,
-                                                              int&nbsp;rows,
-                                                              int&nbsp;min,
-                                                              int&nbsp;max)</pre>
-<div class="block">Generate a random set of tuples for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>min</code> - - the minimum value</dd>
-<dd><code>max</code> - - the maximum value</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the list of tuples</dd>
-</dl>
-</li>
-</ul>
-<a name="generateRandomEntries-int-int-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>generateRandomEntries</h4>
-<pre>public static&nbsp;java.util.ArrayList&lt;<a href="../simpledb/BTreeEntry.html" title="class in simpledb">BTreeEntry</a>&gt;&nbsp;generateRandomEntries(int&nbsp;numKeys,
-                                                                    int&nbsp;tableid,
-                                                                    int&nbsp;childPageCategory,
-                                                                    int&nbsp;minKey,
-                                                                    int&nbsp;maxKey,
-                                                                    int&nbsp;minChildPtr)</pre>
-<div class="block">Generate a random set of entries for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>numKeys</code> - - the number of keys</dd>
-<dd><code>tableid</code> - - the tableid</dd>
-<dd><code>childPageCategory</code> - - the child page category (LEAF or INTERNAL)</dd>
-<dd><code>minKey</code> - - the minimum key value</dd>
-<dd><code>maxKey</code> - - the maximum key value</dd>
-<dd><code>minChildPtr</code> - - the first child pointer</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the list of entries</dd>
-</dl>
-</li>
-</ul>
-<a name="getNumTuplesPerPage-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumTuplesPerPage</h4>
-<pre>public static&nbsp;int&nbsp;getNumTuplesPerPage(int&nbsp;columns)</pre>
-<div class="block">Get the number of tuples that can fit on a page with the specified number of integer fields</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - the number of columns</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of tuples per page</dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomLeafPage</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;createRandomLeafPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                                 int&nbsp;columns,
-                                                 int&nbsp;keyField,
-                                                 int&nbsp;min,
-                                                 int&nbsp;max)
-                                          throws java.io.IOException</pre>
-<div class="block">Create a random leaf page for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the page id of the leaf page</dd>
-<dd><code>columns</code> - - the number of fields per tuple</dd>
-<dd><code>keyField</code> - - the index of the key field in each tuple</dd>
-<dd><code>min</code> - - the minimum value</dd>
-<dd><code>max</code> - - the maximum value</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the leaf page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomLeafPage-simpledb.BTreePageId-int-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomLeafPage</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeLeafPage.html" title="class in simpledb">BTreeLeafPage</a>&nbsp;createRandomLeafPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                                 int&nbsp;columns,
-                                                 int&nbsp;keyField,
-                                                 int&nbsp;numTuples,
-                                                 int&nbsp;min,
-                                                 int&nbsp;max)
-                                          throws java.io.IOException</pre>
-<div class="block">Create a random leaf page for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the page id of the leaf page</dd>
-<dd><code>columns</code> - - the number of fields per tuple</dd>
-<dd><code>keyField</code> - - the index of the key field in each tuple</dd>
-<dd><code>numTuples</code> - - the number of tuples to insert</dd>
-<dd><code>min</code> - - the minimum value</dd>
-<dd><code>max</code> - - the maximum value</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the leaf page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="getNumEntriesPerPage--">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>getNumEntriesPerPage</h4>
-<pre>public static&nbsp;int&nbsp;getNumEntriesPerPage()</pre>
-<div class="block">The number of entries that can fit on a page with integer key fields</div>
-<dl>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the number of entries per page</dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomInternalPage</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;createRandomInternalPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                                         int&nbsp;keyField,
-                                                         int&nbsp;childPageCategory,
-                                                         int&nbsp;minKey,
-                                                         int&nbsp;maxKey,
-                                                         int&nbsp;minChildPtr)
-                                                  throws java.io.IOException</pre>
-<div class="block">Create a random internal page for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the page id of the internal page</dd>
-<dd><code>keyField</code> - - the index of the key field in each tuple</dd>
-<dd><code>childPageCategory</code> - - the child page category (LEAF or INTERNAL)</dd>
-<dd><code>minKey</code> - - the minimum key value</dd>
-<dd><code>maxKey</code> - - the maximum key value</dd>
-<dd><code>minChildPtr</code> - - the first child pointer</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the internal page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="createRandomInternalPage-simpledb.BTreePageId-int-int-int-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createRandomInternalPage</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeInternalPage.html" title="class in simpledb">BTreeInternalPage</a>&nbsp;createRandomInternalPage(<a href="../simpledb/BTreePageId.html" title="class in simpledb">BTreePageId</a>&nbsp;pid,
-                                                         int&nbsp;keyField,
-                                                         int&nbsp;childPageCategory,
-                                                         int&nbsp;numKeys,
-                                                         int&nbsp;minKey,
-                                                         int&nbsp;maxKey,
-                                                         int&nbsp;minChildPtr)
-                                                  throws java.io.IOException</pre>
-<div class="block">Create a random internal page for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>pid</code> - - the page id of the internal page</dd>
-<dd><code>keyField</code> - - the index of the key field in each tuple</dd>
-<dd><code>childPageCategory</code> - - the child page category (LEAF or INTERNAL)</dd>
-<dd><code>numKeys</code> - - the number of keys to insert</dd>
-<dd><code>minKey</code> - - the minimum key value</dd>
-<dd><code>maxKey</code> - - the maximum key value</dd>
-<dd><code>minChildPtr</code> - - the first child pointer</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the internal page</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="createBTreeFile-int-int-java.util.Map-java.util.ArrayList-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createBTreeFile(int&nbsp;columns,
-                                        int&nbsp;rows,
-                                        java.util.Map&lt;java.lang.Integer,java.lang.Integer&gt;&nbsp;columnSpecification,
-                                        java.util.ArrayList&lt;java.util.ArrayList&lt;java.lang.Integer&gt;&gt;&nbsp;tuples,
-                                        int&nbsp;keyField)
-                                 throws java.io.IOException,
-                                        <a href="../simpledb/DbException.html" title="class in simpledb">DbException</a>,
-                                        <a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></pre>
-<div class="block">creates a *non* random B+ tree file for testing</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>columns</code> - - number of columns</dd>
-<dd><code>rows</code> - - number of rows</dd>
-<dd><code>columnSpecification</code> - - optional column specification</dd>
-<dd><code>tuples</code> - - optional list of tuples to return</dd>
-<dd><code>keyField</code> - - the index of the key field</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>a BTreeFile</dd>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-<dd><code><a href="../simpledb/DbException.html" title="class in simpledb">DbException</a></code></dd>
-<dd><code><a href="../simpledb/TransactionAbortedException.html" title="class in simpledb">TransactionAbortedException</a></code></dd>
-</dl>
-</li>
-</ul>
-<a name="openBTreeFile-int-java.io.File-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>openBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;openBTreeFile(int&nbsp;cols,
-                                      java.io.File&nbsp;f,
-                                      int&nbsp;keyField)</pre>
-<div class="block">Opens a BTreeFile and adds it to the catalog.</div>
-<dl>
-<dt><span class="paramLabel">Parameters:</span></dt>
-<dd><code>cols</code> - number of columns in the table.</dd>
-<dd><code>f</code> - location of the file storing the table.</dd>
-<dd><code>keyField</code> - the field the B+ tree is keyed on</dd>
-<dt><span class="returnLabel">Returns:</span></dt>
-<dd>the opened table.</dd>
-</dl>
-</li>
-</ul>
-<a name="openBTreeFile-int-java.lang.String-java.io.File-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>openBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;openBTreeFile(int&nbsp;cols,
-                                      java.lang.String&nbsp;colPrefix,
-                                      java.io.File&nbsp;f,
-                                      int&nbsp;keyField)</pre>
-</li>
-</ul>
-<a name="createEmptyBTreeFile-java.lang.String-int-int-">
-<!--   -->
-</a>
-<ul class="blockList">
-<li class="blockList">
-<h4>createEmptyBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createEmptyBTreeFile(java.lang.String&nbsp;path,
-                                             int&nbsp;cols,
-                                             int&nbsp;keyField)
-                                      throws java.io.IOException</pre>
-<div class="block">A utility method to create a new BTreeFile with no data,
- assuming the path does not already exist. If the path exists, the file
- will be overwritten. The new table will be added to the Catalog with
- the specified number of columns as IntFields indexed on the keyField.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-<a name="createEmptyBTreeFile-java.lang.String-int-int-int-">
-<!--   -->
-</a>
-<ul class="blockListLast">
-<li class="blockList">
-<h4>createEmptyBTreeFile</h4>
-<pre>public static&nbsp;<a href="../simpledb/BTreeFile.html" title="class in simpledb">BTreeFile</a>&nbsp;createEmptyBTreeFile(java.lang.String&nbsp;path,
-                                             int&nbsp;cols,
-                                             int&nbsp;keyField,
-                                             int&nbsp;pages)
-                                      throws java.io.IOException</pre>
-<div class="block">A utility method to create a new BTreeFile with no data, with the specified
- number of pages, assuming the path does not already exist. If the path exists, 
- the file will be overwritten. The new table will be added to the Catalog with
- the specified number of columns as IntFields indexed on the keyField.</div>
-<dl>
-<dt><span class="throwsLabel">Throws:</span></dt>
-<dd><code>java.io.IOException</code></dd>
-</dl>
-</li>
-</ul>
-</li>
-</ul>
-</li>
-</ul>
-</div>
-</div>
-<!-- ========= END OF CLASS DATA ========= -->
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<div class="bottomNav"><a name="navbar.bottom">
-<!--   -->
-</a>
-<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
-<a name="navbar.bottom.firstrow">
-<!--   -->
-</a>
-<ul class="navList" title="Navigation">
-<li><a href="../simpledb/package-summary.html">Package</a></li>
-<li class="navBarCell1Rev">Class</li>
-<li><a href="package-tree.html">Tree</a></li>
-<li><a href="../deprecated-list.html">Deprecated</a></li>
-<li><a href="../index-all.html">Index</a></li>
-<li><a href="../help-doc.html">Help</a></li>
-</ul>
-</div>
-<div class="subNav">
-<ul class="navList">
-<li><a href="../simpledb/BTreeSearchIterator.html" title="class in simpledb"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
-<li><a href="../simpledb/BTreeUtility.BTreeDeleter.html" title="class in simpledb"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
-</ul>
-<ul class="navList">
-<li><a href="../index.html?simpledb/BTreeUtility.html" target="_top">Frames</a></li>
-<li><a href="BTreeUtility.html" target="_top">No&nbsp;Frames</a></li>
-</ul>
-<ul class="navList" id="allclasses_navbar_bottom">
-<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
-</ul>
-<div>
-<script type="text/javascript"><!--
-  allClassesLink = document.getElementById("allclasses_navbar_bottom");
-  if(window==top) {
-    allClassesLink.style.display = "block";
-  }
-  else {
-    allClassesLink.style.display = "none";
-  }
-  //-->
-</script>
-</div>
-<div>
-<ul class="subNavList">
-<li>Summary:&nbsp;</li>
-<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
-<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.summary">Method</a></li>
-</ul>
-<ul class="subNavList">
-<li>Detail:&nbsp;</li>
-<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
-<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
-<li><a href="#method.detail">Method</a></li>
-</ul>
-</div>
-<a name="skip.navbar.bottom">
-<!--   -->
-</a></div>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-</body>
-</html>
